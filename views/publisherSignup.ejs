<%- include('./partials/header.ejs') %>

<form id="signupForm">
    <label for="email">Email address</label>
    <input type="text" name="email" required />
    <div class="email error"></div>

    <label for="password">Password</label>
    <input type="password" name="password" required />
    <div class="password error"></div>

    <label for="name">Name</label>
    <input type="text" name="name" required />

    <label for="creationYear">Creation Year</label>
    <input type="number" name="creationYear" id="yearInput" min="1000" max="9999" required />

    <button id="signupButton">Sign up</button>
</form>

<div id="otpSection" style="display: none;">
    <label for="otp">Enter OTP</label>
    <input type="text" id="otpInput" name="otp" required />
    <button id="verifyOTPButton">Verify OTP</button>
    <div id="otpError" class="otp error" style="color: red; display: none;">Wrong OTP</div>
</div>

<script>
    const emailError = document.querySelector('.email.error');
    const passwordError = document.querySelector('.password.error');
    const otpError = document.getElementById('otpError');
    const signupForm = document.getElementById('signupForm');
    const otpSection = document.getElementById('otpSection');

    const yearInput = document.getElementById('yearInput');
    yearInput.addEventListener('input', function() {
        const yearValue = parseInt(yearInput.value);
        if (isNaN(yearValue) || yearValue < 1000 || yearValue > 9999) {
            yearInput.setCustomValidity('Year must be a four-digit number between 1000 and 9999.');
        } else {
            yearInput.setCustomValidity('');
        }
    });


    signupForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        emailError.textContent = '';
        passwordError.textContent = '';
        otpError.style.display = 'none';

        const formData = new FormData(signupForm);
        const values = Object.fromEntries(formData.entries());

        try {
            const response = await fetch('/auth/signup', {
                method: 'POST',
                body: JSON.stringify(values),
                headers: { 'Content-Type': 'application/json' }
            });
            const data = await response.json();
            if (data.errors) {
                console.log(data.errors);
                emailError.textContent = data.errors.email;
                passwordError.textContent = data.errors.password;
            } else if (data.case === 'otp') {
                otpSection.style.display = 'block';
                signupForm.style.display = 'none';
                // Store the form data for later use
                otpSection.dataset.formData = JSON.stringify(values);
            } else if (data.case === 'success') {
                location.assign('/');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });

    const verifyOTPButton = document.getElementById('verifyOTPButton');

    verifyOTPButton.addEventListener('click', async () => {
        const otpInput = document.getElementById('otpInput').value;
        const formData = JSON.parse(otpSection.dataset.formData);

        try {
            const response = await fetch('/auth/otp', {
                method: 'POST',
                body: JSON.stringify({
                    otp: otpInput,
                    user: formData
                }),
                headers: { 'Content-Type': 'application/json' }
            });
            const data = await response.json();

            if (data.case === 'success') {
                location.assign('/');
            } else if (data.case === 'wrong') {
                otpError.style.display = 'block';
            } else {
                console.log('OTP verification failed');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });
</script>

<%- include('./partials/footer.ejs') %>
